---
version: "3"
services:
  server:
    build:
      context: ./server
      dockerfile: ./Dockerfile
    volumes:
      - ./server:/app
    ports:
      - "5000:5000"
    env_file:
      - ./config/db.env
  listener:
    build:
      context: ./server
      dockerfile: ./Dockerfile
    volumes:
      - ./server:/app
    command: ["node", "./src/listener.js"]
    env_file:
      - ./config/db.env
  blockchain-boot:
    image: blockchain-boot
    build:
      context: ./blockchain
      dockerfile: ./Dockerfile
      args:
        - ACCOUNT_PASSWORD=${BLOCKCHAIN_BOOTNODE_PASSWORD}
    ports:
      - "30303:30303"
    command:
      - "--nodekeyhex=${BLOCKCHAIN_BOOTNODE_NODEKEYHEX}"
      - "--networkid=${NETWORK_ID}"
  blockchain-signer:
    image: blockchain-signer
    build:
      context: ./blockchain
      dockerfile: ./Dockerfile
      args:
        - ACCOUNT_PASSWORD=${BLOCKCHAIN_SIGNER_PASSWORD}
        - KEEP_PASSWORD=true
        - PRIVATE_KEY=${BLOCKCHAIN_SIGNER_PRIVKEY}
    depends_on:
      - blockchain-boot
    command:
      - "--bootnodes"
      - "enode://${BLOCKCHAIN_BOOTNODE_NODEKEY}@blockchain-boot:30303"
      - "--mine"
      - "--unlock"
      - "${BLOCKCHAIN_SIGNER_ACCOUNT}"
      - "--password"
      - "/root/.ethereum/geth/password"
      - "--networkid=${NETWORK_ID}"
  blockchain-rpc:
    image: blockchain-rpc
    build:
      context: ./blockchain
      dockerfile: ./Dockerfile
      args:
        - ACCOUNT_PASSWORD=${BLOCKCHAIN_RPC_PASSWORD}
    depends_on:
      - blockchain-boot
    ports:
      - "8545:8545"
      - "8546:8546"
    volumes:
      - blockchaindata:/root/.ethereum
    command:
      - "--bootnodes"
      - "enode://${BLOCKCHAIN_BOOTNODE_NODEKEY}@blockchain-boot:30303"
      - "--http"
      - "--http.addr"
      - "0.0.0.0"
      - "--ws"
      - "--ws.addr"
      - "0.0.0.0"
      - "--allow-insecure-unlock"
      - "--networkid=${NETWORK_ID}"
  db:
    image: postgis/postgis:latest
    ports:
      - "5432:5432"
    volumes:
      - worldstate:/var/lib/postgresql/data
      # - ./db_init:/docker-entrypoint-initdb.d
    env_file:
      - ./config/db.env
volumes:
  blockchaindata:
  worldstate:
